    if not (ctx.guild.get_role(int(serveur[str(ctx.guild.id)].split(", ")[0])) in ctx.author.roles or ctx.guild.get_role(int(serveur[str(ctx.guild.id)].split(", ")[1])) in ctx.author.roles) :
        await ctx.send("je te baise lophim, je suis un bot debile")
        return

    else:
    
@bot.command()
@commands.has_permissions(administrator = True)
async def setup(ctx):

    guild = ctx.guild.id
    serv = str(guild)
    print(serv)

    await ctx.send("role de mod√©ration (pensez au ping)")

    def checkMessage(message):
        return message.author == ctx.message.author and ctx.message.channel == message.channel

    role = await bot.wait_for("message", timeout=60, check=checkMessage)
    modo = str(role.role_mentions[0].id)

    serveur[serv] = modo

    await ctx.send("role staff (pensez au ping)")

    role = await bot.wait_for("message", timeout=60, check=checkMessage)

    staff = str(role.role_mentions[0].id)

    serveur[serv] = serveur[serv] + f", {staff}"

    with open("role.json", "w") as outfile:
        json.dump(serveur, outfile)
